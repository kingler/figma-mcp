import React, { useEffect, useState } from 'react';
import './design-tokens.css'; // Import the CSS variables generated by Figma MCP

/**
 * Design System Button Component
 * 
 * This component uses design tokens extracted from Figma
 * via the Figma MCP tools. The tokens are imported as CSS
 * variables and applied to the component styles.
 */
function DesignSystemButton({ type = 'primary', size = 'medium', children, onClick }) {
  // Determine button style based on the type prop
  const getButtonType = () => {
    switch (type) {
      case 'primary':
        return 'design-button--primary';
      case 'secondary':
        return 'design-button--secondary';
      case 'success':
        return 'design-button--success';
      case 'warning':
        return 'design-button--warning';
      case 'error':
        return 'design-button--error';
      default:
        return 'design-button--primary';
    }
  };

  // Determine button size based on the size prop
  const getButtonSize = () => {
    switch (size) {
      case 'small':
        return 'design-button--small';
      case 'medium':
        return 'design-button--medium';
      case 'large':
        return 'design-button--large';
      default:
        return 'design-button--medium';
    }
  };

  // Build class name from type and size
  const buttonClassName = `design-button ${getButtonType()} ${getButtonSize()}`;

  return (
    <button 
      className={buttonClassName}
      onClick={onClick}
    >
      {children}
    </button>
  );
}

/**
 * Example App Component
 * 
 * This component demonstrates how to use the DesignSystemButton
 * component in a React application.
 */
function DesignSystemExample() {
  const [themeLoaded, setThemeLoaded] = useState(false);
  
  useEffect(() => {
    // Simulate loading design tokens
    setThemeLoaded(true);
  }, []);

  if (!themeLoaded) {
    return <div>Loading design system...</div>;
  }

  return (
    <div className="design-system-example">
      <h1>Figma Design System Example</h1>
      
      <section>
        <h2>Button Types</h2>
        <div className="button-container">
          <DesignSystemButton type="primary">Primary Button</DesignSystemButton>
          <DesignSystemButton type="secondary">Secondary Button</DesignSystemButton>
          <DesignSystemButton type="success">Success Button</DesignSystemButton>
          <DesignSystemButton type="warning">Warning Button</DesignSystemButton>
          <DesignSystemButton type="error">Error Button</DesignSystemButton>
        </div>
      </section>
      
      <section>
        <h2>Button Sizes</h2>
        <div className="button-container">
          <DesignSystemButton size="small">Small Button</DesignSystemButton>
          <DesignSystemButton size="medium">Medium Button</DesignSystemButton>
          <DesignSystemButton size="large">Large Button</DesignSystemButton>
        </div>
      </section>
    </div>
  );
}

export default DesignSystemExample;

/**
 * CSS for the example component
 * 
 * In a real application, this would be in a separate CSS file.
 * The CSS uses variables that would be defined in the generated
 * design-tokens.css file from the Figma MCP tools.
 */
/*
.design-button {
  border: none;
  border-radius: var(--spacing-xs);
  font-family: var(--typography-body-fontFamily);
  font-size: var(--typography-body-fontSize);
  font-weight: var(--typography-body-fontWeight);
  cursor: pointer;
  transition: background-color 0.2s;
  padding: var(--spacing-sm) var(--spacing-md);
  margin: var(--spacing-xs);
}

.design-button--primary {
  background-color: var(--color-primary);
  color: white;
}

.design-button--secondary {
  background-color: var(--color-secondary);
  color: white;
}

.design-button--success {
  background-color: var(--color-success);
  color: white;
}

.design-button--warning {
  background-color: var(--color-warning);
  color: black;
}

.design-button--error {
  background-color: var(--color-error);
  color: white;
}

.design-button--small {
  padding: var(--spacing-xs) var(--spacing-sm);
  font-size: 0.8em;
}

.design-button--medium {
  padding: var(--spacing-sm) var(--spacing-md);
  font-size: 1em;
}

.design-button--large {
  padding: var(--spacing-md) var(--spacing-lg);
  font-size: 1.2em;
}

.design-system-example {
  max-width: 800px;
  margin: 0 auto;
  padding: var(--spacing-lg);
}

.button-container {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-lg);
}

h1 {
  font-family: var(--typography-headingL-fontFamily);
  font-size: var(--typography-headingL-fontSize);
  font-weight: var(--typography-headingL-fontWeight);
  margin-bottom: var(--spacing-lg);
}

h2 {
  font-family: var(--typography-headingL-fontFamily);
  font-size: calc(var(--typography-headingL-fontSize) * 0.8);
  font-weight: var(--typography-headingL-fontWeight);
  margin-bottom: var(--spacing-md);
}
*/ 